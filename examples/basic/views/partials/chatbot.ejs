<section id="chatbot-section">
    <h1>Chatbot</h1>
    <div style="max-width: 1300px; margin: 40px auto 0 auto; padding: 0 32px;">
        <div id="chatbot-flex-wrapper" style="display: flex; align-items: flex-start; gap: 40px;">
            <!-- Left column: Configuration only -->
            <div id="chatbot-config-column" style="flex: 0 0 600px; min-width: 320px; background: #fafbfc; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.04); padding: 24px;">
                <fieldset id="chatbot-configuration" style="margin-bottom: 20px; border: 1px solid #ccc; border-radius: 6px; padding: 18px; background: #fff;">
                    <legend style="font-weight: bold; padding: 0 5px;">Chatbot Configuration</legend>
                    <div style="display: flex; gap: 24px; margin-bottom: 16px;">
                        <div>
                            <label for="chat-type-toggle" style="display: block; margin-bottom: 4px;">Use Floating Widget:</label>
                            <input type="checkbox" id="chat-type-toggle">
                        </div>
                        <div>
                            <label for="stream-toggle-input" style="display: block; margin-bottom: 4px;">Enable Stream:</label>
                            <input type="checkbox" id="stream-toggle-input">
                        </div>
                    </div>
                    <div id="float-position-controls" style="margin-bottom: 16px; display: none;">
                        <label for="float-position-select" style="display: block; margin-bottom: 4px;">Floating Widget Position:</label>
                        <select id="float-position-select" style="width: 100%;">
                            <option value="bottom-right">Bottom Right</option>
                            <option value="bottom-left">Bottom Left</option>
                            <option value="top-right">Top Right</option>
                            <option value="top-left">Top Left</option>
                        </select>
                    </div>
                    <div id="flow-id-controls" style="margin-bottom: 16px;">
                        <label for="flow-id-input" style="display: block; margin-bottom: 4px;">Flow ID:</label>
                        <input type="text" id="flow-id-input" style="width: 100%;">
                    </div>
                    <div id="widget-title-controls" style="margin-bottom: 16px;">
                        <label for="widget-title-input" style="display: block; margin-bottom: 4px;">Widget Title:</label>
                        <input type="text" id="widget-title-input" style="width: 100%;">
                    </div>
                    <div style="display: flex; gap: 12px; margin-bottom: 16px;">
                        <div style="flex: 1 1 0;">
                            <label for="user-sender-input" style="display: block; margin-bottom: 4px;">User Sender Name:</label>
                            <input type="text" id="user-sender-input" style="width: 100%;">
                        </div>
                        <div style="flex: 1 1 0;">
                            <label for="bot-sender-input" style="display: block; margin-bottom: 4px;">Bot Sender Name:</label>
                            <input type="text" id="bot-sender-input" style="width: 100%;">
                        </div>
                    </div>
                    <div id="message-template-controls" style="margin-bottom: 16px;">
                        <label for="message-template-input" style="display: block; margin-bottom: 4px;">Message Template:</label>
                        <textarea id="message-template-input" rows="6" style="width: 100%; font-family: monospace;"></textarea>
                    </div>
                    <button id="launch-chatbot-button" type="button" style="margin-top: 12px; width: 100%;">Launch Chatbot</button>
                </fieldset>
            </div>
            <!-- Right column: Session Management and Embedded Chatbot -->
            <div id="embedded-chatbot-container-wrapper" style="flex: 1; min-width: 350px;">
                <fieldset id="session-management" style="margin-bottom: 20px; border: 1px solid #ccc; border-radius: 6px; padding: 18px; background: #fff; max-width: 600px; width: 100%; margin-left: auto; margin-right: auto;">
                    <legend style="font-weight: bold; padding: 0 5px;">Session Management</legend>
                    <div id="session-id-controls" style="margin-bottom: 0;">
                        <label for="session-id-input" style="display: block; margin-bottom: 4px;">Session ID:</label>
                        <input type="text" id="session-id-input" placeholder="Optional: Enter Session ID" style="width: 100%; margin-bottom: 8px;">
                        <button id="apply-session-id-button" type="button" style="width: 100%; margin-bottom: 8px;">Apply Session ID to Active Chat</button>
                        <button id="clear-session-id-button" type="button" style="width: 100%;">Clear Session ID & Restart Chat</button>
                    </div>
                </fieldset>
                <div id="chatbot-container" style="max-width: 600px; border: 1px solid #ddd; box-shadow: 0 0 10px rgba(0,0,0,0.1); overflow: hidden; margin-left: auto; margin-right: auto;"></div>
            </div>
        </div>
    </div>
</section> 

<link rel="stylesheet" href="/static/langflow-chatbot.css">
<style>
    :root { 
        /* 
         * Example of overriding default styles.
         * In a production environment, you would typically define these in your own CSS file
         * or directly in a style tag after loading langflow-chatbot.css.
         * These variables control the color palette of the chatbot components.
         */
        --langflow-chatbot-palette-primary: #28a745; /* Main theme color (buttons, icons) */
        --langflow-chatbot-palette-primary-hover: #1e7e34; /* Darker shade for hover states */
        --langflow-chatbot-palette-focus-ring: rgba(40, 167, 69, 0.25); /* Focus ring for accessibility */
        /* You can also override other variables like:
           --langflow-chatbot-palette-secondary, 
           --langflow-chatbot-font-family,
           --langflow-chatbot-font-size-normal,
           --langflow-chatbot-border-radius,
           etc. 
           Refer to the langflow-chatbot.css for a full list of available CSS variables.
        */
    }
    @media (max-width: 900px) {
        #chatbot-flex-wrapper {
            flex-direction: column;
        }
        #embedded-chatbot-container-wrapper {
            margin-left: 0 !important;
        }
        #chatbot-config-column {
            min-width: 0 !important;
            width: 100% !important;
            box-sizing: border-box;
        }
    }
</style>

<script src="/static/langflow-chatbot.js"></script>
<script src="/static/LangflowChatbotPlugin.js"></script>
<script>
  // Use the new plugin API, but keep the configuration and session management UI
  let currentChatbotInstance = null;

  function getConfigFromUI() {
    return {
      containerId: 'chatbot-container',
      flowId: document.getElementById('flow-id-input').value.trim() || 'memory-chatbot',
      useFloating: document.getElementById('chat-type-toggle').checked,
      enableStream: document.getElementById('stream-toggle-input').checked,
      widgetTitle: document.getElementById('widget-title-input').value.trim() || 'Chat Assistant',
      userSender: document.getElementById('user-sender-input').value.trim() || 'Me',
      botSender: document.getElementById('bot-sender-input').value.trim() || 'Assistant',
      messageTemplate: document.getElementById('message-template-input').value.trim() || undefined,
      floatPosition: document.getElementById('float-position-select').value || 'bottom-right',
      sessionId: document.getElementById('session-id-input').value.trim() || undefined,
    };
  }

  function launchChatbot() {
    if (currentChatbotInstance && typeof currentChatbotInstance.destroy === 'function') {
      currentChatbotInstance.destroy();
      currentChatbotInstance = null;
    }
    const config = getConfigFromUI();
    currentChatbotInstance = window.LangflowChatbotPlugin.init(config);
  }

  document.addEventListener('DOMContentLoaded', () => {
    // Set initial values for config fields
    document.getElementById('flow-id-input').value = 'memory-chatbot';
    document.getElementById('stream-toggle-input').checked = true;
    document.getElementById('chat-type-toggle').checked = false;
    document.getElementById('widget-title-input').value = 'Chat Assistant';
    document.getElementById('user-sender-input').value = 'Me';
    document.getElementById('bot-sender-input').value = 'Assistant';
    document.getElementById('message-template-input').value = `<div class="{{messageClasses}} message-block">\n  <div class="sender-name-display">{{sender}}</div>\n  <div class="message-bubble">\n    <span class="message-text-content">{{message}}</span>\n  </div>\n</div>\n`;
    document.getElementById('float-position-select').value = 'bottom-right';

    // Show/hide float position selector based on floating toggle
    function updateFloatPositionVisibility() {
      const floatControls = document.getElementById('float-position-controls');
      const chatTypeToggle = document.getElementById('chat-type-toggle');
      if (chatTypeToggle && floatControls) {
        floatControls.style.display = chatTypeToggle.checked ? 'block' : 'none';
      }
    }
    updateFloatPositionVisibility();
    document.getElementById('chat-type-toggle').addEventListener('change', updateFloatPositionVisibility);

    // Launch chatbot on button click
    document.getElementById('launch-chatbot-button').addEventListener('click', launchChatbot);

    // Session management
    document.getElementById('apply-session-id-button').addEventListener('click', launchChatbot);
    document.getElementById('clear-session-id-button').addEventListener('click', () => {
      document.getElementById('session-id-input').value = '';
      launchChatbot();
    });

    // Optionally, auto-apply session ID on Enter
    document.getElementById('session-id-input').addEventListener('keydown', (event) => {
      if (event.key === 'Enter') {
        event.preventDefault();
        launchChatbot();
      }
    });
  });
</script> 